# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - prod
  schedule:
    - cron:  '0/30 19-23,0-14 * * *'


jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: '3.x' # Semantic version range syntax or exact version of a Python version
        architecture: 'x64' # Optional - x64 or x86, defaults to x64
    # You can test your matrix by printing the current Python version
    - name: run python script
      run: |
        python -m pip install --upgrade pip
        pip install feedparser datetime dateparser python-dateutil
        python scripts/newscrawler.py

    - name: use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: npm install
      run: npm ci
    - name: build data
      env:
        REACT_APP_DRIVE_KEY: ${{secrets.DRIVE_TOKEN}}
      run: node scripts/google-drive-download.js
    - name: npm run build
      env:
        REACT_APP_MAP_API: ${{ secrets.MAPBOX_TOKEN }}
      run: npm run build&&cp config/google3413bf25c03a27c3.html build/
    - name: sycn with s3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'ap-southeast-2'   # optional: defaults to us-east-1
        SOURCE_DIR: 'build'      # optional: defaults to entire repository
        DEST_DIR: 'public'
    - name: deploy to master branch
      uses: JamesIves/github-pages-deploy-action@releases/v3
      env:
        REACT_APP_MAP_API: ${{ secrets.MAPBOX_TOKEN }}
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: master # The branch the action should deploy to.
        FOLDER: ghPage # The folder the action should deploy.
